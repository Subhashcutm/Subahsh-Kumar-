#include<stdio.h> 
#include<stdlib.h> 
struct node{ 
 int data; 
 struct node* link; 
}; 
struct node* root = NULL; 
int len; 
void append(void); 
int length(void); 
void display(void); 
void addatbegin(void); 
void addafter(void); 
void delete(void); 
void main(){ 
 int ch; 
 
 while(1){
 printf("Operations:\n"); 
 printf("1.Append\n"); 
 printf("2.AddAtBegin\n"); 
 printf("3.AddAfter\n"); 
 printf("4.Length\n"); 
 printf("5.Delete\n"); 
 printf("6.Display\n"); 
 printf("7.Quit\n"); 
 printf("Enter choice:\n"); 
 scanf("%d",&ch); 
 switch(ch){ 
 case 1: append(); 
 break; 
 case 2: addatbegin(); 
 break; 
 case 3: addafter(); 
 break; 
 case 4: len=length(); 
 printf("length is %d\n",len); 
 break; 
 case 5: delete (); 
 break; 
 case 6: display(); 
 break; 
 case 7: exit(1); 
 default: printf("Invalid Choice\n"); 
 } 
} 
} 
void append(){ 
 struct node* temp; 
 temp=(struct node*)malloc(sizeof(struct node)); 
 printf("Enter node data:\n"); 
 scanf("%d",&temp -> data); 
 temp ->link=NULL; 
 if(root == NULL){ 
 root = temp;} 
 else{ 
 struct node* p; 
 p=root; 
 while(p -> link !=NULL){
p = p->link; 
 } 
 p->link=temp; 
 } 
} 
void addatbegin(){ 
 struct node* temp; 
 temp=(struct node*)malloc(sizeof(struct node)); 
 printf("Enter node data:\n"); 
 scanf("%d",&temp -> data); 
 temp ->link=NULL; 
 if(root == NULL){ 
 root = temp;} 
 else{ 
 temp->link=root; 
 root=temp; 
 } 
} 
int length(){ 
 int count=0; 
 struct node* temp; 
 temp=root; 
 while(temp != NULL){ 
 count++; 
 temp=temp->link; 
 } 
 return count; 
} 
void display(){ 
 struct node* temp; 
 temp = root; 
 if(temp == NULL){ 
 printf("List is empty!"); 
 } 
 else{ 
 while(temp !=NULL){ 
 printf("%d -->",temp->data); 
 temp = temp ->link; 
 } 
 printf("\n\n"); 
 } 
 } 
void addafter(){ 
 struct node* temp,*p; 
 int loc,i=1; 
 printf("Enter the location:"); 
 scanf("%d",&loc); 
 if(loc>length()){ 
 printf("Invalid location\n"); 
 printf("Currently list has %d nodes\n",length()); 
 } 
 else{ 
 temp=(struct node*)malloc(sizeof(struct node)); 
 printf("Enter node data:\n"); 
 scanf("%d",&temp -> data); 
 temp ->link=NULL; 
 p=root; 
 while(i<loc){ 
 p=p->link; 
 i++; 
 } 
 temp->link=p->link;
 p->link=temp; 
 } 
} 
void delete(){ 
 struct node* temp; 
 int loc; 
 printf("Enter Location: "); 
 scanf("%d",&loc); 
 if(loc>length()){ 
 printf("Invalid location\n"); 
 } 
 else if(loc==1){ 
 temp=root; 
 root=temp ->link; 
 temp->link = NULL; 
 free(temp); 
 } 
 else{ 
 struct node* p=root, *q; 
 int i=1; 
 while(i<loc-1){
 p=p->link; 
 i++; 
 } 
 q=p->link; 
 p->link=q->link; 
 q->link= NULL; 
 free(q); 
 } 
} 

